{"ast":null,"code":"import { v1 } from 'uuid';\nconst initialState = {\n  count: []\n};\nexport const tasksReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'REMOVE-TASK':\n      {\n        const stateCopy = {\n          ...state\n        };\n        const tasks = stateCopy[action.todolistId];\n        const newTasks = tasks.filter(t => t.id != action.taskId);\n        stateCopy[action.todolistId] = newTasks;\n        return stateCopy;\n      }\n    case 'ADD-TASK':\n      {\n        const stateCopy = {\n          ...state\n        };\n        const newTask = {\n          id: v1(),\n          title: action.title,\n          isDone: false\n        };\n        const tasks = stateCopy[action.todolistId];\n        const newTasks = [newTask, ...tasks];\n        stateCopy[action.todolistId] = newTasks;\n        return stateCopy;\n      }\n    case 'CHANGE-TASK-STATUS':\n      {\n        let todolistTasks = state[action.todolistId];\n        state[action.todolistId] = todolistTasks.map(t => t.id === action.taskId ? {\n          ...t,\n          isDone: action.isDone\n        } : t);\n        return {\n          ...state\n        };\n      }\n    case 'CHANGE-TASK-TITLE':\n      {\n        let todolistTasks = state[action.todolistId];\n        state[action.todolistId] = todolistTasks.map(t => t.id === action.taskId ? {\n          ...t,\n          title: action.title\n        } : t);\n        return {\n          ...state\n        };\n      }\n    case 'ADD-TODOLIST':\n      {\n        return {\n          ...state,\n          [action.todolistId]: []\n        };\n      }\n    case 'REMOVE-TODOLIST':\n      {\n        const copyState = {\n          ...state\n        };\n        delete copyState[action.id];\n        return copyState;\n      }\n    default:\n      return state;\n  }\n};\nexport const removeTaskAC = (taskId, todolistId) => {\n  return {\n    type: 'REMOVE-TASK',\n    taskId: taskId,\n    todolistId: todolistId\n  };\n};\nexport const addTaskAC = (title, todolistId) => {\n  return {\n    type: 'ADD-TASK',\n    title,\n    todolistId\n  };\n};\nexport const changeTaskStatusAC = (taskId, isDone, todolistId) => {\n  return {\n    type: 'CHANGE-TASK-STATUS',\n    isDone,\n    todolistId,\n    taskId\n  };\n};\nexport const changeTaskTitleAC = (taskId, title, todolistId) => {\n  return {\n    type: 'CHANGE-TASK-TITLE',\n    title,\n    todolistId,\n    taskId\n  };\n};","map":{"version":3,"names":["v1","initialState","count","tasksReducer","state","action","type","stateCopy","tasks","todolistId","newTasks","filter","t","id","taskId","newTask","title","isDone","todolistTasks","map","copyState","removeTaskAC","addTaskAC","changeTaskStatusAC","changeTaskTitleAC"],"sources":["/Users/daniltkacenko/react_kamasutra/todolist-lesson/12-todolist/src/state/tasks-reducer.ts"],"sourcesContent":["import {TasksStateType} from '../App';\r\nimport {TaskType} from '../Todolist';\r\nimport {v1} from 'uuid';\r\nimport {AddTodolistActionType, RemoveTodolistActionType} from './todolists-reducer';\r\n\r\nexport type RemoveTaskActionType = {\r\n    type: 'REMOVE-TASK',\r\n    todolistId: string\r\n    taskId: string\r\n}\r\n\r\nexport type AddTaskActionType = {\r\n    type: 'ADD-TASK',\r\n    todolistId: string\r\n    title: string\r\n}\r\n\r\nexport type ChangeTaskStatusActionType = {\r\n    type: 'CHANGE-TASK-STATUS',\r\n    todolistId: string\r\n    taskId: string\r\n    isDone: boolean\r\n}\r\n\r\nexport type ChangeTaskTitleActionType = {\r\n    type: 'CHANGE-TASK-TITLE',\r\n    todolistId: string\r\n    taskId: string\r\n    title: string\r\n}\r\n\r\ntype ActionsType = RemoveTaskActionType | AddTaskActionType\r\n    | ChangeTaskStatusActionType\r\n    | ChangeTaskTitleActionType\r\n    | AddTodolistActionType\r\n    | RemoveTodolistActionType\r\n\r\nconst initialState: TasksStateType = {\r\n    count: []\r\n}\r\n\r\nexport const tasksReducer = (state: TasksStateType = initialState, action: ActionsType): TasksStateType => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TASK': {\r\n            const stateCopy = {...state}\r\n            const tasks = stateCopy[action.todolistId];\r\n            const newTasks = tasks.filter(t => t.id != action.taskId);\r\n            stateCopy[action.todolistId] = newTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'ADD-TASK': {\r\n            const stateCopy = {...state}\r\n            const newTask: TaskType = {\r\n                id: v1(),\r\n                title: action.title,\r\n                isDone: false\r\n            }\r\n            const tasks = stateCopy[action.todolistId];\r\n            const newTasks = [newTask, ...tasks];\r\n            stateCopy[action.todolistId] = newTasks;\r\n            return stateCopy;\r\n        }\r\n        case 'CHANGE-TASK-STATUS': {\r\n            let todolistTasks = state[action.todolistId];\r\n            state[action.todolistId] = todolistTasks\r\n                .map(t => t.id === action.taskId\r\n                    ? {...t, isDone: action.isDone}\r\n                    : t);\r\n            return ({...state});\r\n        }\r\n        case 'CHANGE-TASK-TITLE': {\r\n            let todolistTasks = state[action.todolistId];\r\n            state[action.todolistId] = todolistTasks\r\n                .map(t => t.id === action.taskId\r\n                    ? {...t, title: action.title}\r\n                    : t);\r\n            return ({...state});\r\n        }\r\n        case 'ADD-TODOLIST': {\r\n            return {\r\n                ...state,\r\n                [action.todolistId]: []\r\n            }\r\n        }\r\n        case 'REMOVE-TODOLIST': {\r\n            const copyState = {...state};\r\n            delete copyState[action.id];\r\n            return copyState;\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const removeTaskAC = (taskId: string, todolistId: string): RemoveTaskActionType => {\r\n    return {type: 'REMOVE-TASK', taskId: taskId, todolistId: todolistId}\r\n}\r\nexport const addTaskAC = (title: string, todolistId: string): AddTaskActionType => {\r\n    return {type: 'ADD-TASK', title, todolistId}\r\n}\r\nexport const changeTaskStatusAC = (taskId: string, isDone: boolean, todolistId: string): ChangeTaskStatusActionType => {\r\n    return {type: 'CHANGE-TASK-STATUS', isDone, todolistId, taskId}\r\n}\r\nexport const changeTaskTitleAC = (taskId: string, title: string, todolistId: string): ChangeTaskTitleActionType => {\r\n    return {type: 'CHANGE-TASK-TITLE', title, todolistId, taskId}\r\n}\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}