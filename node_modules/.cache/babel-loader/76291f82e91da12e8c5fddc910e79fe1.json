{"ast":null,"code":"var _jsxFileName = \"/Users/daniltkacenko/react_kamasutra/todolist-lesson/12-todolist/src/AddItemForm.tsx\",\n  _s = $RefreshSig$();\nimport TextField from '@mui/material/TextField/TextField';\nimport React, { useState } from 'react';\nimport { IconButton } from \"@mui/material\";\nimport { AddBox } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const EditableSpan = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(props => {\n  _s();\n  let [title, setTitle] = useState(\"\");\n  let [error, setError] = useState(null);\n  const addItem = () => {\n    if (title.trim() !== \"\") {\n      props.addItem(title);\n      setTitle(\"\");\n    } else {\n      setError(\"Title is required\");\n    }\n  };\n  const onChangeHandler = e => {\n    setTitle(e.currentTarget.value);\n  };\n  const onKeyPressHandler = e => {\n    if (error !== null) {\n      setError(null);\n    }\n    if (e.charCode === 13) {\n      addItem();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      variant: \"outlined\",\n      error: !!error,\n      value: title,\n      onChange: onChangeHandler,\n      onKeyPress: onKeyPressHandler,\n      label: \"Title\",\n      helperText: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"primary\",\n      onClick: addItem,\n      children: /*#__PURE__*/_jsxDEV(AddBox, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 12\n  }, this);\n}, \"MVMLmy4kP556v7E3KHW9YED2Wxk=\")), \"MVMLmy4kP556v7E3KHW9YED2Wxk=\");\n_c2 = EditableSpan;\nvar _c, _c2;\n$RefreshReg$(_c, \"EditableSpan$React.memo\");\n$RefreshReg$(_c2, \"EditableSpan\");","map":{"version":3,"names":["TextField","React","useState","IconButton","AddBox","EditableSpan","memo","props","title","setTitle","error","setError","addItem","trim","onChangeHandler","e","currentTarget","value","onKeyPressHandler","charCode"],"sources":["/Users/daniltkacenko/react_kamasutra/todolist-lesson/12-todolist/src/AddItemForm.tsx"],"sourcesContent":["import TextField from '@mui/material/TextField/TextField';\nimport React, {ChangeEvent, KeyboardEvent, useState} from 'react';\nimport {IconButton} from \"@mui/material\";\nimport {AddBox} from \"@mui/icons-material\";\n\n\nexport type AddItemFormPropsType = {\n    addItem: (title: string) => void\n}\n\nexport const EditableSpan = React.memo( (props: AddItemFormPropsType) => {\n\n    let [title, setTitle] = useState(\"\")\n    let [error, setError] = useState<string | null>(null)\n\n    const addItem = () => {\n        if (title.trim() !== \"\") {\n            props.addItem(title);\n            setTitle(\"\");\n        } else {\n            setError(\"Title is required\");\n        }\n    }\n\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        setTitle(e.currentTarget.value)\n    }\n\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (error !== null) {\n            setError(null);\n        }\n        if (e.charCode === 13) {\n            addItem();\n        }\n    }\n\n    return <div>\n        <TextField variant=\"outlined\"\n                   error={!!error}\n                   value={title}\n                   onChange={onChangeHandler}\n                   onKeyPress={onKeyPressHandler}\n                   label=\"Title\"\n                   helperText={error}\n        />\n        <IconButton color=\"primary\" onClick={addItem}>\n            <AddBox />\n        </IconButton>\n    </div>\n} );\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,mCAAmC;AACzD,OAAOC,KAAK,IAA+BC,QAAQ,QAAO,OAAO;AACjE,SAAQC,UAAU,QAAO,eAAe;AACxC,SAAQC,MAAM,QAAO,qBAAqB;AAAC;AAO3C,OAAO,MAAMC,YAAY,iCAAGJ,KAAK,CAACK,IAAI,SAAGC,KAA2B,IAAK;EAAA;EAErE,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,IAAI,CAACQ,KAAK,EAAEC,QAAQ,CAAC,GAAGT,QAAQ,CAAgB,IAAI,CAAC;EAErD,MAAMU,OAAO,GAAG,MAAM;IAClB,IAAIJ,KAAK,CAACK,IAAI,EAAE,KAAK,EAAE,EAAE;MACrBN,KAAK,CAACK,OAAO,CAACJ,KAAK,CAAC;MACpBC,QAAQ,CAAC,EAAE,CAAC;IAChB,CAAC,MAAM;MACHE,QAAQ,CAAC,mBAAmB,CAAC;IACjC;EACJ,CAAC;EAED,MAAMG,eAAe,GAAIC,CAAgC,IAAK;IAC1DN,QAAQ,CAACM,CAAC,CAACC,aAAa,CAACC,KAAK,CAAC;EACnC,CAAC;EAED,MAAMC,iBAAiB,GAAIH,CAAkC,IAAK;IAC9D,IAAIL,KAAK,KAAK,IAAI,EAAE;MAChBC,QAAQ,CAAC,IAAI,CAAC;IAClB;IACA,IAAII,CAAC,CAACI,QAAQ,KAAK,EAAE,EAAE;MACnBP,OAAO,EAAE;IACb;EACJ,CAAC;EAED,oBAAO;IAAA,wBACH,QAAC,SAAS;MAAC,OAAO,EAAC,UAAU;MAClB,KAAK,EAAE,CAAC,CAACF,KAAM;MACf,KAAK,EAAEF,KAAM;MACb,QAAQ,EAAEM,eAAgB;MAC1B,UAAU,EAAEI,iBAAkB;MAC9B,KAAK,EAAC,OAAO;MACb,UAAU,EAAER;IAAM;MAAA;MAAA;MAAA;IAAA,QAC3B,eACF,QAAC,UAAU;MAAC,KAAK,EAAC,SAAS;MAAC,OAAO,EAAEE,OAAQ;MAAA,uBACzC,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA;IAAG;MAAA;MAAA;MAAA;IAAA,QACD;EAAA;IAAA;IAAA;IAAA;EAAA,QACX;AACV,CAAC,kCAAE;AAAC,MAxCSP,YAAY;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}