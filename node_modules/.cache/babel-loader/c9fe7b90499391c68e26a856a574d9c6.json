{"ast":null,"code":"var _jsxFileName = \"/Users/daniltkacenko/react_kamasutra/todolist-lesson/12-todolist/src/EditableSpan.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { TextField } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppWithRedux = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(function (props) {\n  _s();\n  let [editMode, setEditMode] = useState(false);\n  let [title, setTitle] = useState(props.value);\n  const activateEditMode = () => {\n    setEditMode(true);\n    setTitle(props.value);\n  };\n  const activateViewMode = () => {\n    setEditMode(false);\n    props.onChange(title);\n  };\n  const changeTitle = e => {\n    setTitle(e.currentTarget.value);\n  };\n  return editMode ? /*#__PURE__*/_jsxDEV(TextField, {\n    value: title,\n    onChange: changeTitle,\n    autoFocus: true,\n    onBlur: activateViewMode\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 14\n  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n    onDoubleClick: activateEditMode,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 11\n  }, this);\n}, \"QeJF1daIrCh753fIFS8q1vMlE0A=\")), \"QeJF1daIrCh753fIFS8q1vMlE0A=\");\n_c2 = AppWithRedux;\nvar _c, _c2;\n$RefreshReg$(_c, \"AppWithRedux$React.memo\");\n$RefreshReg$(_c2, \"AppWithRedux\");","map":{"version":3,"names":["React","useState","TextField","AppWithRedux","memo","props","editMode","setEditMode","title","setTitle","value","activateEditMode","activateViewMode","onChange","changeTitle","e","currentTarget"],"sources":["/Users/daniltkacenko/react_kamasutra/todolist-lesson/12-todolist/src/EditableSpan.tsx"],"sourcesContent":["import React, {ChangeEvent, useState} from 'react';\nimport {TextField} from \"@mui/material\";\n\n\ntype EditableSpanPropsType = {\n    value: string\n    onChange: (newValue: string) => void\n}\n\nexport const AppWithRedux = React.memo(function(props: EditableSpanPropsType) {\n\n    let [editMode, setEditMode] = useState(false);\n    let [title, setTitle] = useState(props.value);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n        setTitle(props.value);\n    }\n    const activateViewMode = () => {\n        setEditMode(false);\n        props.onChange(title);\n    }\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\n        setTitle(e.currentTarget.value)\n    }\n\n    return editMode\n        ?    <TextField value={title} onChange={changeTitle} autoFocus onBlur={activateViewMode} />\n        : <span onDoubleClick={activateEditMode}>{props.value}</span>\n})\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAgBC,QAAQ,QAAO,OAAO;AAClD,SAAQC,SAAS,QAAO,eAAe;AAAC;AAQxC,OAAO,MAAMC,YAAY,iCAAGH,KAAK,CAACI,IAAI,SAAC,UAASC,KAA4B,EAAE;EAAA;EAE1E,IAAI,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC7C,IAAI,CAACO,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAACI,KAAK,CAACK,KAAK,CAAC;EAE7C,MAAMC,gBAAgB,GAAG,MAAM;IAC3BJ,WAAW,CAAC,IAAI,CAAC;IACjBE,QAAQ,CAACJ,KAAK,CAACK,KAAK,CAAC;EACzB,CAAC;EACD,MAAME,gBAAgB,GAAG,MAAM;IAC3BL,WAAW,CAAC,KAAK,CAAC;IAClBF,KAAK,CAACQ,QAAQ,CAACL,KAAK,CAAC;EACzB,CAAC;EACD,MAAMM,WAAW,GAAIC,CAAgC,IAAK;IACtDN,QAAQ,CAACM,CAAC,CAACC,aAAa,CAACN,KAAK,CAAC;EACnC,CAAC;EAED,OAAOJ,QAAQ,gBACN,QAAC,SAAS;IAAC,KAAK,EAAEE,KAAM;IAAC,QAAQ,EAAEM,WAAY;IAAC,SAAS;IAAC,MAAM,EAAEF;EAAiB;IAAA;IAAA;IAAA;EAAA,QAAG,gBACzF;IAAM,aAAa,EAAED,gBAAiB;IAAA,UAAEN,KAAK,CAACK;EAAK;IAAA;IAAA;IAAA;EAAA,QAAQ;AACrE,CAAC,kCAAC;AAAA,MApBWP,YAAY;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}