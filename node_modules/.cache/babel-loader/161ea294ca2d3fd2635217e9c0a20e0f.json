{"ast":null,"code":"var _jsxFileName = \"/Users/daniltkacenko/react_kamasutra/todolist-lesson/12-todolist/src/Todolist.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport { AddItemForm } from './AddItemForm';\nimport { EditableSpan } from './EditableSpan';\nimport { Task } from './Task';\nimport { Button, IconButton } from \"@mui/material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Todolist = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(function (props) {\n  _s();\n  const addTask = useCallback(title => {\n    props.addTask(title, props.id);\n  }, [props.addTask, props.id]);\n  const removeTodolist = () => {\n    props.removeTodolist(props.id);\n  };\n  const changeTodolistTitle = useCallback(title => {\n    props.changeTodolistTitle(props.id, title);\n  }, [props.id, props.changeTodolistTitle]);\n  const onAllClickHandler = useCallback(() => props.changeFilter('all', props.id), [props.changeFilter, props.id]);\n  const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.id), [props.changeFilter, props.id]);\n  const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.id), [props.changeFilter, props.id]);\n  let tasksForTodolist = props.tasks;\n  if (props.filter === 'active') {\n    tasksForTodolist = props.tasks.filter(t => t.isDone === false);\n  }\n  if (props.filter === 'completed') {\n    tasksForTodolist = props.tasks.filter(t => t.isDone === true);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: [/*#__PURE__*/_jsxDEV(EditableSpan, {\n        value: props.title,\n        onChange: changeTodolistTitle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n        onClick: removeTodolist,\n        children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(AddItemForm, {\n      addItem: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: tasksForTodolist.map(t => /*#__PURE__*/_jsxDEV(Task, {\n        task: t,\n        changeTaskStatus: props.changeTaskStatus,\n        changeTaskTitle: props.changeTaskTitle,\n        removeTask: props.removeTask,\n        todolistId: props.id\n      }, t.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 43\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        paddingTop: '10px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: props.filter === 'all' ? 'outlined' : 'text',\n        onClick: onAllClickHandler,\n        color: 'inherit',\n        children: \"All\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: props.filter === 'active' ? 'outlined' : 'text',\n        onClick: onActiveClickHandler,\n        color: 'primary',\n        children: \"Active\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: props.filter === 'completed' ? 'outlined' : 'text',\n        onClick: onCompletedClickHandler,\n        color: 'secondary',\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 12\n  }, this);\n}, \"A69eojXGiXxeKhXoPJklCyEXyY8=\")), \"A69eojXGiXxeKhXoPJklCyEXyY8=\");\n_c2 = Todolist;\nvar _c, _c2;\n$RefreshReg$(_c, \"Todolist$React.memo\");\n$RefreshReg$(_c2, \"Todolist\");","map":{"version":3,"names":["React","useCallback","AddItemForm","EditableSpan","Task","Button","IconButton","Delete","Todolist","memo","props","addTask","title","id","removeTodolist","changeTodolistTitle","onAllClickHandler","changeFilter","onActiveClickHandler","onCompletedClickHandler","tasksForTodolist","tasks","filter","t","isDone","map","changeTaskStatus","changeTaskTitle","removeTask","paddingTop"],"sources":["/Users/daniltkacenko/react_kamasutra/todolist-lesson/12-todolist/src/Todolist.tsx"],"sourcesContent":["import React, {useCallback} from 'react'\r\nimport {FilterValuesType} from './App'\r\nimport {AddItemForm} from './AddItemForm'\r\nimport {EditableSpan} from './EditableSpan'\r\n\r\nimport {Task} from './Task'\r\nimport {Button, IconButton} from \"@mui/material\";\r\nimport {Delete} from \"@mui/icons-material\";\r\n\r\nexport type TaskType = {\r\n    id: string\r\n    title: string\r\n    isDone: boolean\r\n}\r\n\r\ntype PropsType = {\r\n    id: string\r\n    title: string\r\n    tasks: Array<TaskType>\r\n    changeFilter: (value: FilterValuesType, todolistId: string) => void\r\n    addTask: (title: string, todolistId: string) => void\r\n    changeTaskStatus: (id: string, isDone: boolean, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    removeTodolist: (id: string) => void\r\n    changeTodolistTitle: (id: string, newTitle: string) => void\r\n    filter: FilterValuesType\r\n\r\n}\r\n\r\nexport const Todolist = React.memo(function (props: PropsType) {\r\n\r\n    const addTask = useCallback((title: string) => {\r\n        props.addTask(title, props.id)\r\n    }, [props.addTask, props.id])\r\n\r\n    const removeTodolist = () => {\r\n        props.removeTodolist(props.id)\r\n    }\r\n    const changeTodolistTitle = useCallback((title: string) => {\r\n        props.changeTodolistTitle(props.id, title)\r\n    }, [props.id, props.changeTodolistTitle])\r\n\r\n    const onAllClickHandler = useCallback(() => props.changeFilter('all', props.id), [props.changeFilter, props.id])\r\n    const onActiveClickHandler = useCallback(() => props.changeFilter('active', props.id), [props.changeFilter, props.id])\r\n    const onCompletedClickHandler = useCallback(() => props.changeFilter('completed', props.id), [props.changeFilter, props.id])\r\n\r\n    let tasksForTodolist = props.tasks\r\n\r\n    if (props.filter === 'active') {\r\n        tasksForTodolist = props.tasks.filter(t => t.isDone === false)\r\n    }\r\n    if (props.filter === 'completed') {\r\n        tasksForTodolist = props.tasks.filter(t => t.isDone === true)\r\n    }\r\n\r\n    return <div>\r\n        <h3><EditableSpan value={props.title} onChange={changeTodolistTitle}/>\r\n            <IconButton onClick={removeTodolist}>\r\n                <Delete/>\r\n            </IconButton>\r\n        </h3>\r\n        <AddItemForm addItem={addTask}/>\r\n        <div>\r\n            {\r\n                tasksForTodolist.map(t => <Task\r\n                    task={t}\r\n                    changeTaskStatus={props.changeTaskStatus}\r\n                    changeTaskTitle={props.changeTaskTitle}\r\n                    removeTask={props.removeTask}\r\n                    todolistId={props.id}\r\n                    key={t.id}\r\n                />)\r\n            }\r\n        </div>\r\n        <div style={{paddingTop: '10px'}}>\r\n            <Button variant={props.filter === 'all' ? 'outlined' : 'text'}\r\n                    onClick={onAllClickHandler}\r\n                    color={'inherit'}\r\n            >All\r\n            </Button>\r\n            <Button variant={props.filter === 'active' ? 'outlined' : 'text'}\r\n                    onClick={onActiveClickHandler}\r\n                    color={'primary'}>Active\r\n            </Button>\r\n            <Button variant={props.filter === 'completed' ? 'outlined' : 'text'}\r\n                    onClick={onCompletedClickHandler}\r\n                    color={'secondary'}>Completed\r\n            </Button>\r\n        </div>\r\n    </div>\r\n})\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}