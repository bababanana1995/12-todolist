{"ast":null,"code":"import { v1 } from 'uuid';\nconst initialState = [];\nexport const todolistsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  switch (action.type) {\n    case 'REMOVE-TODOLIST':\n      {\n        return state.filter(tl => tl.id != action.id);\n      }\n    case 'ADD-TODOLIST':\n      {\n        return [{\n          id: action.todolistId,\n          title: action.title,\n          filter: 'all'\n        }, ...state];\n      }\n    case 'CHANGE-TODOLIST-TITLE':\n      {\n        const todolist = state.find(tl => tl.id === action.id);\n        if (todolist) {\n          // если нашёлся - изменим ему заголовок\n          todolist.title = action.title;\n        }\n        return [...state];\n      }\n    case 'CHANGE-TODOLIST-FILTER':\n      {\n        const todolist = state.find(tl => tl.id === action.id);\n        if (todolist) {\n          // если нашёлся - изменим ему заголовок\n          todolist.filter = action.filter;\n        }\n        return [...state];\n      }\n    default:\n      return state;\n  }\n};\nexport const removeTodolistAC = todolistId => {\n  return {\n    type: 'REMOVE-TODOLIST',\n    id: todolistId\n  };\n};\nexport const addTodolistAC = title => {\n  return {\n    type: 'ADD-TODOLIST',\n    title: title,\n    todolistId: v1()\n  };\n};\nexport const changeTodolistTitleAC = (id, title) => {\n  return {\n    type: 'CHANGE-TODOLIST-TITLE',\n    id: id,\n    title: title\n  };\n};\nexport const changeTodolistFilterAC = (id, filter) => {\n  return {\n    type: 'CHANGE-TODOLIST-FILTER',\n    id: id,\n    filter: filter\n  };\n};","map":{"version":3,"names":["v1","initialState","todolistsReducer","state","action","type","filter","tl","id","todolistId","title","todolist","find","removeTodolistAC","addTodolistAC","changeTodolistTitleAC","changeTodolistFilterAC"],"sources":["/Users/daniltkacenko/react_kamasutra/todolist-lesson/12-todolist/src/state/todolists-reducer.ts"],"sourcesContent":["import {FilterValuesType, TodolistType} from '../App';\r\nimport {v1} from 'uuid';\r\n\r\nexport type RemoveTodolistActionType = {\r\n    type: 'REMOVE-TODOLIST',\r\n    id: string\r\n}\r\nexport type AddTodolistActionType = {\r\n    type: 'ADD-TODOLIST',\r\n    title: string\r\n    todolistId: string\r\n}\r\nexport type ChangeTodolistTitleActionType = {\r\n    type: 'CHANGE-TODOLIST-TITLE',\r\n    id: string\r\n    title: string\r\n}\r\nexport type ChangeTodolistFilterActionType = {\r\n    type: 'CHANGE-TODOLIST-FILTER',\r\n    id: string\r\n    filter: FilterValuesType\r\n}\r\n\r\ntype ActionsType = RemoveTodolistActionType | AddTodolistActionType\r\n    | ChangeTodolistTitleActionType\r\n    | ChangeTodolistFilterActionType\r\n\r\nconst initialState: Array<TodolistType> =  []\r\n\r\nexport const todolistsReducer = (state: Array<TodolistType> = initialState, action: ActionsType): Array<TodolistType> => {\r\n    switch (action.type) {\r\n        case 'REMOVE-TODOLIST': {\r\n            return state.filter(tl => tl.id != action.id)\r\n        }\r\n        case 'ADD-TODOLIST': {\r\n            return [{\r\n                id: action.todolistId,\r\n                title: action.title,\r\n                filter: 'all'\r\n            }, ...state]\r\n        }\r\n        case 'CHANGE-TODOLIST-TITLE': {\r\n            const todolist = state.find(tl => tl.id === action.id);\r\n            if (todolist) {\r\n                // если нашёлся - изменим ему заголовок\r\n                todolist.title = action.title;\r\n            }\r\n            return [...state]\r\n        }\r\n        case 'CHANGE-TODOLIST-FILTER': {\r\n            const todolist = state.find(tl => tl.id === action.id);\r\n            if (todolist) {\r\n                // если нашёлся - изменим ему заголовок\r\n                todolist.filter = action.filter;\r\n            }\r\n            return [...state]\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const removeTodolistAC = (todolistId: string): RemoveTodolistActionType => {\r\n    return { type: 'REMOVE-TODOLIST', id: todolistId}\r\n}\r\nexport const addTodolistAC = (title: string): AddTodolistActionType => {\r\n    return { type: 'ADD-TODOLIST', title: title, todolistId: v1()}\r\n}\r\nexport const changeTodolistTitleAC = (id: string, title: string): ChangeTodolistTitleActionType => {\r\n    return { type: 'CHANGE-TODOLIST-TITLE', id: id, title: title}\r\n}\r\nexport const changeTodolistFilterAC = (id: string, filter: FilterValuesType): ChangeTodolistFilterActionType => {\r\n    return { type: 'CHANGE-TODOLIST-FILTER', id: id, filter: filter}\r\n}\r\n\r\n"],"mappings":"AACA,SAAQA,EAAE,QAAO,MAAM;AA0BvB,MAAMC,YAAiC,GAAI,EAAE;AAE7C,OAAO,MAAMC,gBAAgB,GAAG,YAAyF;EAAA,IAAxFC,KAA0B,uEAAGF,YAAY;EAAA,IAAEG,MAAmB;EAC3F,QAAQA,MAAM,CAACC,IAAI;IACf,KAAK,iBAAiB;MAAE;QACpB,OAAOF,KAAK,CAACG,MAAM,CAACC,EAAE,IAAIA,EAAE,CAACC,EAAE,IAAIJ,MAAM,CAACI,EAAE,CAAC;MACjD;IACA,KAAK,cAAc;MAAE;QACjB,OAAO,CAAC;UACJA,EAAE,EAAEJ,MAAM,CAACK,UAAU;UACrBC,KAAK,EAAEN,MAAM,CAACM,KAAK;UACnBJ,MAAM,EAAE;QACZ,CAAC,EAAE,GAAGH,KAAK,CAAC;MAChB;IACA,KAAK,uBAAuB;MAAE;QAC1B,MAAMQ,QAAQ,GAAGR,KAAK,CAACS,IAAI,CAACL,EAAE,IAAIA,EAAE,CAACC,EAAE,KAAKJ,MAAM,CAACI,EAAE,CAAC;QACtD,IAAIG,QAAQ,EAAE;UACV;UACAA,QAAQ,CAACD,KAAK,GAAGN,MAAM,CAACM,KAAK;QACjC;QACA,OAAO,CAAC,GAAGP,KAAK,CAAC;MACrB;IACA,KAAK,wBAAwB;MAAE;QAC3B,MAAMQ,QAAQ,GAAGR,KAAK,CAACS,IAAI,CAACL,EAAE,IAAIA,EAAE,CAACC,EAAE,KAAKJ,MAAM,CAACI,EAAE,CAAC;QACtD,IAAIG,QAAQ,EAAE;UACV;UACAA,QAAQ,CAACL,MAAM,GAAGF,MAAM,CAACE,MAAM;QACnC;QACA,OAAO,CAAC,GAAGH,KAAK,CAAC;MACrB;IACA;MACI,OAAOA,KAAK;EAAC;AAEzB,CAAC;AAED,OAAO,MAAMU,gBAAgB,GAAIJ,UAAkB,IAA+B;EAC9E,OAAO;IAAEJ,IAAI,EAAE,iBAAiB;IAAEG,EAAE,EAAEC;EAAU,CAAC;AACrD,CAAC;AACD,OAAO,MAAMK,aAAa,GAAIJ,KAAa,IAA4B;EACnE,OAAO;IAAEL,IAAI,EAAE,cAAc;IAAEK,KAAK,EAAEA,KAAK;IAAED,UAAU,EAAET,EAAE;EAAE,CAAC;AAClE,CAAC;AACD,OAAO,MAAMe,qBAAqB,GAAG,CAACP,EAAU,EAAEE,KAAa,KAAoC;EAC/F,OAAO;IAAEL,IAAI,EAAE,uBAAuB;IAAEG,EAAE,EAAEA,EAAE;IAAEE,KAAK,EAAEA;EAAK,CAAC;AACjE,CAAC;AACD,OAAO,MAAMM,sBAAsB,GAAG,CAACR,EAAU,EAAEF,MAAwB,KAAqC;EAC5G,OAAO;IAAED,IAAI,EAAE,wBAAwB;IAAEG,EAAE,EAAEA,EAAE;IAAEF,MAAM,EAAEA;EAAM,CAAC;AACpE,CAAC"},"metadata":{},"sourceType":"module"}