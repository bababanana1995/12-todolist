{"ast":null,"code":"var _jsxFileName = \"/Users/daniltkacenko/react_kamasutra/todolist-lesson/12-todolist/src/Task.tsx\",\n  _s = $RefreshSig$();\nimport Checkbox from '@mui/material/Checkbox/Checkbox';\nimport React, { useCallback } from 'react';\nimport { EditableSpan } from './EditableSpan';\nimport { IconButton } from \"@mui/material\";\nimport { Delete } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Task = /*#__PURE__*/_s( /*#__PURE__*/React.memo(_c = _s(props => {\n  _s();\n  const onClickHandler = () => props.removeTask(props.task.id, props.todolistId);\n  const onChangeHandler = e => {\n    let newIsDoneValue = e.currentTarget.checked;\n    props.changeTaskStatus(props.task.id, newIsDoneValue, props.todolistId);\n  };\n  const onTitleChangeHandler = useCallback(newValue => {\n    props.changeTaskTitle(props.task.id, newValue, props.todolistId);\n  }, [props.task.id, props.changeTaskTitle, props.todolistId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: props.task.isDone ? 'is-done' : '',\n    children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n      checked: props.task.isDone,\n      color: \"primary\",\n      onChange: onChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(EditableSpan, {\n      value: props.task.title,\n      onChange: onTitleChangeHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: onClickHandler,\n      children: /*#__PURE__*/_jsxDEV(Delete, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this)]\n  }, props.task.id, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 12\n  }, this);\n}, \"twDFCJnizxT5S5FHYI8sqb1EQ7k=\")), \"twDFCJnizxT5S5FHYI8sqb1EQ7k=\");\n_c2 = Task;\nvar _c, _c2;\n$RefreshReg$(_c, \"Task$React.memo\");\n$RefreshReg$(_c2, \"Task\");","map":{"version":3,"names":["Checkbox","React","useCallback","EditableSpan","IconButton","Delete","Task","memo","props","onClickHandler","removeTask","task","id","todolistId","onChangeHandler","e","newIsDoneValue","currentTarget","checked","changeTaskStatus","onTitleChangeHandler","newValue","changeTaskTitle","isDone","title"],"sources":["/Users/daniltkacenko/react_kamasutra/todolist-lesson/12-todolist/src/Task.tsx"],"sourcesContent":["import Checkbox from '@mui/material/Checkbox/Checkbox'\r\nimport React, {ChangeEvent, useCallback} from 'react'\r\nimport {EditableSpan} from './EditableSpan'\r\nimport {TaskType} from './Todolist'\r\nimport {IconButton} from \"@mui/material\";\r\nimport {Delete} from \"@mui/icons-material\";\r\n\r\ntype TaskPropsType = {\r\n    changeTaskStatus: (id: string, isDone: boolean, todolistId: string) => void\r\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\r\n    removeTask: (taskId: string, todolistId: string) => void\r\n    task: TaskType\r\n    todolistId: string\r\n}\r\nexport const Task = React.memo((props: TaskPropsType) => {\r\n    const onClickHandler = () => props.removeTask(props.task.id, props.todolistId)\r\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\r\n        let newIsDoneValue = e.currentTarget.checked\r\n        props.changeTaskStatus(props.task.id, newIsDoneValue, props.todolistId)\r\n    }\r\n    const onTitleChangeHandler = useCallback((newValue: string) => {\r\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\r\n    }, [props.task.id, props.changeTaskTitle, props.todolistId]);\r\n\r\n\r\n    return <div key={props.task.id} className={props.task.isDone ? 'is-done' : ''}>\r\n        <Checkbox\r\n            checked={props.task.isDone}\r\n            color=\"primary\"\r\n            onChange={onChangeHandler}\r\n        />\r\n\r\n        <EditableSpan value={props.task.title} onChange={onTitleChangeHandler}/>\r\n        <IconButton onClick={onClickHandler}>\r\n            <Delete/>\r\n        </IconButton>\r\n    </div>\r\n})\r\n"],"mappings":";;AAAA,OAAOA,QAAQ,MAAM,iCAAiC;AACtD,OAAOC,KAAK,IAAgBC,WAAW,QAAO,OAAO;AACrD,SAAQC,YAAY,QAAO,gBAAgB;AAE3C,SAAQC,UAAU,QAAO,eAAe;AACxC,SAAQC,MAAM,QAAO,qBAAqB;AAAC;AAS3C,OAAO,MAAMC,IAAI,iCAAGL,KAAK,CAACM,IAAI,SAAEC,KAAoB,IAAK;EAAA;EACrD,MAAMC,cAAc,GAAG,MAAMD,KAAK,CAACE,UAAU,CAACF,KAAK,CAACG,IAAI,CAACC,EAAE,EAAEJ,KAAK,CAACK,UAAU,CAAC;EAC9E,MAAMC,eAAe,GAAIC,CAAgC,IAAK;IAC1D,IAAIC,cAAc,GAAGD,CAAC,CAACE,aAAa,CAACC,OAAO;IAC5CV,KAAK,CAACW,gBAAgB,CAACX,KAAK,CAACG,IAAI,CAACC,EAAE,EAAEI,cAAc,EAAER,KAAK,CAACK,UAAU,CAAC;EAC3E,CAAC;EACD,MAAMO,oBAAoB,GAAGlB,WAAW,CAAEmB,QAAgB,IAAK;IAC3Db,KAAK,CAACc,eAAe,CAACd,KAAK,CAACG,IAAI,CAACC,EAAE,EAAES,QAAQ,EAAEb,KAAK,CAACK,UAAU,CAAC;EACpE,CAAC,EAAE,CAACL,KAAK,CAACG,IAAI,CAACC,EAAE,EAAEJ,KAAK,CAACc,eAAe,EAAEd,KAAK,CAACK,UAAU,CAAC,CAAC;EAG5D,oBAAO;IAAyB,SAAS,EAAEL,KAAK,CAACG,IAAI,CAACY,MAAM,GAAG,SAAS,GAAG,EAAG;IAAA,wBAC1E,QAAC,QAAQ;MACL,OAAO,EAAEf,KAAK,CAACG,IAAI,CAACY,MAAO;MAC3B,KAAK,EAAC,SAAS;MACf,QAAQ,EAAET;IAAgB;MAAA;MAAA;MAAA;IAAA,QAC5B,eAEF,QAAC,YAAY;MAAC,KAAK,EAAEN,KAAK,CAACG,IAAI,CAACa,KAAM;MAAC,QAAQ,EAAEJ;IAAqB;MAAA;MAAA;MAAA;IAAA,QAAE,eACxE,QAAC,UAAU;MAAC,OAAO,EAAEX,cAAe;MAAA,uBAChC,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA;IAAE;MAAA;MAAA;MAAA;IAAA,QACA;EAAA,GAVAD,KAAK,CAACG,IAAI,CAACC,EAAE;IAAA;IAAA;IAAA;EAAA,QAWxB;AACV,CAAC,kCAAC;AAAA,MAvBWN,IAAI;AAAA;AAAA;AAAA"},"metadata":{},"sourceType":"module"}