"use strict";
(globalThis["webpackChunkit_incubator_todolist_ts"] = globalThis["webpackChunkit_incubator_todolist_ts"] || []).push([["stories-Task-stories"],{

/***/ "./node_modules/@storybook/addon-actions/dist/chunk-GOSXJPAJ.mjs":
/*!***********************************************************************!*\
  !*** ./node_modules/@storybook/addon-actions/dist/chunk-GOSXJPAJ.mjs ***!
  \***********************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   actions: () => (/* binding */ actions)
/* harmony export */ });
/* harmony import */ var _chunk_AY7I2SME_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-AY7I2SME.mjs */ "./node_modules/@storybook/addon-actions/dist/chunk-AY7I2SME.mjs");


var actions=(...args)=>{let options=_chunk_AY7I2SME_mjs__WEBPACK_IMPORTED_MODULE_0__.config,names=args;names.length===1&&Array.isArray(names[0])&&([names]=names),names.length!==1&&typeof names[names.length-1]!="string"&&(options={..._chunk_AY7I2SME_mjs__WEBPACK_IMPORTED_MODULE_0__.config,...names.pop()});let namesObject=names[0];(names.length!==1||typeof namesObject=="string")&&(namesObject={},names.forEach(name=>{namesObject[name]=name;}));let actionsObject={};return Object.keys(namesObject).forEach(name=>{actionsObject[name]=(0,_chunk_AY7I2SME_mjs__WEBPACK_IMPORTED_MODULE_0__.action)(namesObject[name],options);}),actionsObject};




/***/ }),

/***/ "./node_modules/@storybook/addon-actions/dist/index.mjs":
/*!**************************************************************!*\
  !*** ./node_modules/@storybook/addon-actions/dist/index.mjs ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ADDON_ID: () => (/* reexport safe */ _chunk_VWCVBQ22_mjs__WEBPACK_IMPORTED_MODULE_2__.ADDON_ID),
/* harmony export */   CLEAR_ID: () => (/* reexport safe */ _chunk_VWCVBQ22_mjs__WEBPACK_IMPORTED_MODULE_2__.CLEAR_ID),
/* harmony export */   CYCLIC_KEY: () => (/* reexport safe */ _chunk_VWCVBQ22_mjs__WEBPACK_IMPORTED_MODULE_2__.CYCLIC_KEY),
/* harmony export */   EVENT_ID: () => (/* reexport safe */ _chunk_VWCVBQ22_mjs__WEBPACK_IMPORTED_MODULE_2__.EVENT_ID),
/* harmony export */   PANEL_ID: () => (/* reexport safe */ _chunk_VWCVBQ22_mjs__WEBPACK_IMPORTED_MODULE_2__.PANEL_ID),
/* harmony export */   PARAM_KEY: () => (/* reexport safe */ _chunk_VWCVBQ22_mjs__WEBPACK_IMPORTED_MODULE_2__.PARAM_KEY),
/* harmony export */   action: () => (/* reexport safe */ _chunk_AY7I2SME_mjs__WEBPACK_IMPORTED_MODULE_1__.action),
/* harmony export */   actions: () => (/* reexport safe */ _chunk_GOSXJPAJ_mjs__WEBPACK_IMPORTED_MODULE_0__.actions),
/* harmony export */   config: () => (/* reexport safe */ _chunk_AY7I2SME_mjs__WEBPACK_IMPORTED_MODULE_1__.config),
/* harmony export */   configureActions: () => (/* reexport safe */ _chunk_AY7I2SME_mjs__WEBPACK_IMPORTED_MODULE_1__.configureActions)
/* harmony export */ });
/* harmony import */ var _chunk_GOSXJPAJ_mjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./chunk-GOSXJPAJ.mjs */ "./node_modules/@storybook/addon-actions/dist/chunk-GOSXJPAJ.mjs");
/* harmony import */ var _chunk_AY7I2SME_mjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chunk-AY7I2SME.mjs */ "./node_modules/@storybook/addon-actions/dist/chunk-AY7I2SME.mjs");
/* harmony import */ var _chunk_VWCVBQ22_mjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chunk-VWCVBQ22.mjs */ "./node_modules/@storybook/addon-actions/dist/chunk-VWCVBQ22.mjs");





/***/ }),

/***/ "./src/stories/Task.stories.tsx":
/*!**************************************!*\
  !*** ./src/stories/Task.stories.tsx ***!
  \**************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   TaskIsDoneStory: () => (/* binding */ TaskIsDoneStory),
/* harmony export */   TaskIsNoteDoneStory: () => (/* binding */ TaskIsNoteDoneStory),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _Task__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../Task */ "./src/Task.tsx");
/* harmony import */ var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @storybook/addon-actions */ "./node_modules/@storybook/addon-actions/dist/index.mjs");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _TaskIsDoneStory$para, _TaskIsDoneStory$para2, _TaskIsDoneStory$para3, _TaskIsNoteDoneStory$, _TaskIsNoteDoneStory$2, _TaskIsNoteDoneStory$3;


// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
  title: 'TODOLISTS/Task',
  component: _Task__WEBPACK_IMPORTED_MODULE_0__.Task,
  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
  tags: ['autodocs'],
  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes
  args: {
    changeTaskStatus: (0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)('changeTaskStatus'),
    changeTaskTitle: (0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)('changeTaskStatus'),
    removeTask: (0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)('changeTaskStatus'),
    task: {
      id: 'haha',
      title: 'JS',
      isDone: true
    },
    todolistId: '123'
  }
};
/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
const TaskIsDoneStory = {
  args: {}
};
const TaskIsNoteDoneStory = {
  args: {
    task: {
      id: 'haha',
      title: 'CSS',
      isDone: false
    }
  }
};
TaskIsDoneStory.parameters = {
  ...TaskIsDoneStory.parameters,
  docs: {
    ...((_TaskIsDoneStory$para = TaskIsDoneStory.parameters) === null || _TaskIsDoneStory$para === void 0 ? void 0 : _TaskIsDoneStory$para.docs),
    source: {
      originalSource: "{\n  args: {}\n}",
      ...((_TaskIsDoneStory$para2 = TaskIsDoneStory.parameters) === null || _TaskIsDoneStory$para2 === void 0 ? void 0 : (_TaskIsDoneStory$para3 = _TaskIsDoneStory$para2.docs) === null || _TaskIsDoneStory$para3 === void 0 ? void 0 : _TaskIsDoneStory$para3.source)
    }
  }
};
TaskIsNoteDoneStory.parameters = {
  ...TaskIsNoteDoneStory.parameters,
  docs: {
    ...((_TaskIsNoteDoneStory$ = TaskIsNoteDoneStory.parameters) === null || _TaskIsNoteDoneStory$ === void 0 ? void 0 : _TaskIsNoteDoneStory$.docs),
    source: {
      originalSource: "{\n  args: {\n    task: {\n      id: 'haha',\n      title: 'CSS',\n      isDone: false\n    }\n  }\n}",
      ...((_TaskIsNoteDoneStory$2 = TaskIsNoteDoneStory.parameters) === null || _TaskIsNoteDoneStory$2 === void 0 ? void 0 : (_TaskIsNoteDoneStory$3 = _TaskIsNoteDoneStory$2.docs) === null || _TaskIsNoteDoneStory$3 === void 0 ? void 0 : _TaskIsNoteDoneStory$3.source)
    }
  }
};
const __namedExportsOrder = ["TaskIsDoneStory", "TaskIsNoteDoneStory"];

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ }),

/***/ "./src/EditableSpan.tsx":
/*!******************************!*\
  !*** ./src/EditableSpan.tsx ***!
  \******************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   EditableSpan: () => (/* binding */ EditableSpan)
/* harmony export */ });
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @mui/material */ "./node_modules/@mui/material/esm/TextField/TextField.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/daniltkacenko/react_kamasutra/todolist-lesson/12-todolist/src/EditableSpan.tsx",
  _s = __webpack_require__.$Refresh$.signature();



const EditableSpan = /*#__PURE__*/_s( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().memo(_c = _s(function (props) {
  _s();
  let [editMode, setEditMode] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);
  let [title, setTitle] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(props.value);
  const activateEditMode = () => {
    setEditMode(true);
    setTitle(props.value);
  };
  const activateViewMode = () => {
    setEditMode(false);
    props.onChange(title);
  };
  const changeTitle = e => {
    setTitle(e.currentTarget.value);
  };
  return editMode ? /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)(_mui_material__WEBPACK_IMPORTED_MODULE_2__["default"], {
    value: title,
    onChange: changeTitle,
    autoFocus: true,
    onBlur: activateViewMode
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 28,
    columnNumber: 14
  }, this) : /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxDEV)("span", {
    onDoubleClick: activateEditMode,
    children: props.value
  }, void 0, false, {
    fileName: _jsxFileName,
    lineNumber: 29,
    columnNumber: 11
  }, this);
}, "QeJF1daIrCh753fIFS8q1vMlE0A=")), "QeJF1daIrCh753fIFS8q1vMlE0A=");
_c2 = EditableSpan;
var _c, _c2;
__webpack_require__.$Refresh$.register(_c, "EditableSpan$React.memo");
__webpack_require__.$Refresh$.register(_c2, "EditableSpan");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}
try {
    // @ts-ignore
    EditableSpan.displayName = "EditableSpan";
    // @ts-ignore
    EditableSpan.__docgenInfo = { "description": "", "displayName": "EditableSpan", "props": { "value": { "defaultValue": null, "description": "", "name": "value", "required": true, "type": { "name": "string" } }, "onChange": { "defaultValue": null, "description": "", "name": "onChange", "required": true, "type": { "name": "(newValue: string) => void" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/EditableSpan.tsx#EditableSpan"] = { docgenInfo: EditableSpan.__docgenInfo, name: "EditableSpan", path: "src/EditableSpan.tsx#EditableSpan" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ }),

/***/ "./src/Task.tsx":
/*!**********************!*\
  !*** ./src/Task.tsx ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Task: () => (/* binding */ Task)
/* harmony export */ });
/* harmony import */ var _mui_material_Checkbox_Checkbox__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @mui/material/Checkbox/Checkbox */ "./node_modules/@mui/material/Checkbox/Checkbox.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _EditableSpan__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EditableSpan */ "./src/EditableSpan.tsx");
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mui/material */ "./node_modules/@mui/material/esm/IconButton/IconButton.js");
/* harmony import */ var _mui_icons_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @mui/icons-material */ "./node_modules/@mui/icons-material/esm/Delete.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/daniltkacenko/react_kamasutra/todolist-lesson/12-todolist/src/Task.tsx",
  _s = __webpack_require__.$Refresh$.signature();






const Task = /*#__PURE__*/_s( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().memo(_c = _s(props => {
  _s();
  const onClickHandler = () => props.removeTask(props.task.id, props.todolistId);
  const onChangeHandler = e => {
    let newIsDoneValue = e.currentTarget.checked;
    props.changeTaskStatus(props.task.id, newIsDoneValue, props.todolistId);
  };
  const onTitleChangeHandler = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(newValue => {
    props.changeTaskTitle(props.task.id, newValue, props.todolistId);
  }, [props.task.id, props.changeTaskTitle, props.todolistId]);
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
    className: props.task.isDone ? 'is-done' : '',
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_mui_material_Checkbox_Checkbox__WEBPACK_IMPORTED_MODULE_3__["default"], {
      checked: props.task.isDone,
      color: "primary",
      onChange: onChangeHandler
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 27,
      columnNumber: 9
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_EditableSpan__WEBPACK_IMPORTED_MODULE_1__.EditableSpan, {
      value: props.task.title,
      onChange: onTitleChangeHandler
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 33,
      columnNumber: 9
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_mui_material__WEBPACK_IMPORTED_MODULE_4__["default"], {
      onClick: onClickHandler,
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_mui_icons_material__WEBPACK_IMPORTED_MODULE_5__["default"], {}, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 35,
        columnNumber: 13
      }, undefined)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 34,
      columnNumber: 9
    }, undefined)]
  }, props.task.id, true, {
    fileName: _jsxFileName,
    lineNumber: 26,
    columnNumber: 12
  }, undefined);
}, "twDFCJnizxT5S5FHYI8sqb1EQ7k=")), "twDFCJnizxT5S5FHYI8sqb1EQ7k=");
_c2 = Task;
var _c, _c2;
__webpack_require__.$Refresh$.register(_c, "Task$React.memo");
__webpack_require__.$Refresh$.register(_c2, "Task");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}
try {
    // @ts-ignore
    Task.displayName = "Task";
    // @ts-ignore
    Task.__docgenInfo = { "description": "", "displayName": "Task", "props": { "changeTaskStatus": { "defaultValue": null, "description": "", "name": "changeTaskStatus", "required": true, "type": { "name": "(id: string, isDone: boolean, todolistId: string) => void" } }, "changeTaskTitle": { "defaultValue": null, "description": "", "name": "changeTaskTitle", "required": true, "type": { "name": "(taskId: string, newTitle: string, todolistId: string) => void" } }, "removeTask": { "defaultValue": null, "description": "", "name": "removeTask", "required": true, "type": { "name": "(taskId: string, todolistId: string) => void" } }, "task": { "defaultValue": null, "description": "", "name": "task", "required": true, "type": { "name": "TaskType" } }, "todolistId": { "defaultValue": null, "description": "", "name": "todolistId", "required": true, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/Task.tsx#Task"] = { docgenInfo: Task.__docgenInfo, name: "Task", path: "src/Task.tsx#Task" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

}]);
//# sourceMappingURL=stories-Task-stories.iframe.bundle.js.map