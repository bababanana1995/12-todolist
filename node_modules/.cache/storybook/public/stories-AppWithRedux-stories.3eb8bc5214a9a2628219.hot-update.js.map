{"version":3,"file":"stories-AppWithRedux-stories.3eb8bc5214a9a2628219.hot-update.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAWA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AATA;AAAA;AAAA;AAAA;AAWA;AAAA;AAtBA;AAAA;AAAA","sources":["webpack://it-incubator-todolist-ts/./src/Task.tsx"],"sourcesContent":["import Checkbox from '@mui/material/Checkbox/Checkbox'\nimport React, {ChangeEvent, useCallback} from 'react'\nimport {AppWithRedux} from './EditableSpan'\nimport {TaskType} from './Todolist'\nimport {IconButton} from \"@mui/material\";\nimport {AddTask, Delete} from \"@mui/icons-material\";\nimport {EditableSpan} from \"./AddItemForm\";\nimport {AddItemFormErrorStory} from \"./stories/AddItimForm.stories\";\n\ntype TaskPropsType = {\n    changeTaskStatus: (id: string, isDone: boolean, todolistId: string) => void\n    changeTaskTitle: (taskId: string, newTitle: string, todolistId: string) => void\n    removeTask: (taskId: string, todolistId: string) => void\n    task: TaskType\n    todolistId: string\n}\nexport const Task = React.memo((props: TaskPropsType) => {\n    const onClickHandler = () => props.removeTask(props.task.id, props.todolistId)\n    const onChangeHandler = (e: ChangeEvent<HTMLInputElement>) => {\n        let newIsDoneValue = e.currentTarget.checked\n        props.changeTaskStatus(props.task.id, newIsDoneValue, props.todolistId)\n    }\n    const onTitleChangeHandler = useCallback((newValue: string) => {\n        props.changeTaskTitle(props.task.id, newValue, props.todolistId)\n    }, [props.task.id, props.changeTaskTitle, props.todolistId]);\n\n\n    return <div key={props.task.id} className={props.task.isDone ? 'is-done' : ''}>\n        <Checkbox\n            checked={props.task.isDone}\n            color=\"primary\"\n            onChange={onChangeHandler}\n        />\n        <AppWithRedux value={props.task.title} onChange={onTitleChangeHandler}/>\n        <IconButton onClick={onClickHandler}>\n            <Delete/>\n        </IconButton>\n    </div>\n})\n"],"names":[],"sourceRoot":""}