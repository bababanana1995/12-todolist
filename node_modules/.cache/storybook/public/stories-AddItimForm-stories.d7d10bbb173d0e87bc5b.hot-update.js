"use strict";
globalThis["webpackHotUpdateit_incubator_todolist_ts"]("stories-AddItimForm-stories",{

/***/ "./src/stories/AddItimForm.stories.ts":
/*!********************************************!*\
  !*** ./src/stories/AddItimForm.stories.ts ***!
  \********************************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Error: () => (/* binding */ Error),
/* harmony export */   Primary: () => (/* binding */ Primary),
/* harmony export */   __namedExportsOrder: () => (/* binding */ __namedExportsOrder),
/* harmony export */   "default": () => (__WEBPACK_DEFAULT_EXPORT__)
/* harmony export */ });
/* harmony import */ var _AddItemForm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../AddItemForm */ "./src/AddItemForm.tsx");
/* harmony import */ var _storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @storybook/addon-actions */ "./node_modules/@storybook/addon-actions/dist/index.mjs");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _Primary$parameters, _Primary$parameters2, _Primary$parameters2$, _Error$parameters, _Error$parameters2, _Error$parameters2$do;



// More on how to set up stories at: https://storybook.js.org/docs/react/writing-stories/introduction#default-export
const meta = {
  title: 'TODOLISTS/AddItemForm',
  component: _AddItemForm__WEBPACK_IMPORTED_MODULE_0__.AddItemForm,
  // This component will have an automatically generated Autodocs entry: https://storybook.js.org/docs/react/writing-docs/autodocs
  tags: ['autodocs'],
  // More on argTypes: https://storybook.js.org/docs/react/api/argtypes
  argTypes: {
    addItem: {
      description: 'button clicked inside form'
      // action: 'clicked'
    }
  }
};

/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = (meta);
// More on writing stories with args: https://storybook.js.org/docs/react/writing-stories/args
const Primary = {
  args: {
    addItem: (0,_storybook_addon_actions__WEBPACK_IMPORTED_MODULE_1__.action)('button clicked inside form')
  }
};
const Error = {
  render: () => {
    return;
  }
};
Primary.parameters = {
  ...Primary.parameters,
  docs: {
    ...((_Primary$parameters = Primary.parameters) === null || _Primary$parameters === void 0 ? void 0 : _Primary$parameters.docs),
    source: {
      originalSource: "{\n  args: {\n    addItem: action('button clicked inside form')\n  }\n}",
      ...((_Primary$parameters2 = Primary.parameters) === null || _Primary$parameters2 === void 0 ? void 0 : (_Primary$parameters2$ = _Primary$parameters2.docs) === null || _Primary$parameters2$ === void 0 ? void 0 : _Primary$parameters2$.source)
    }
  }
};
Error.parameters = {
  ...Error.parameters,
  docs: {
    ...((_Error$parameters = Error.parameters) === null || _Error$parameters === void 0 ? void 0 : _Error$parameters.docs),
    source: {
      originalSource: "{\n  render: () => {\n    return;\n  }\n}",
      ...((_Error$parameters2 = Error.parameters) === null || _Error$parameters2 === void 0 ? void 0 : (_Error$parameters2$do = _Error$parameters2.docs) === null || _Error$parameters2$do === void 0 ? void 0 : _Error$parameters2$do.source)
    }
  }
};
const __namedExportsOrder = ["Primary", "Error"];

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}

/***/ })

});