"use strict";
globalThis["webpackHotUpdateit_incubator_todolist_ts"]("stories-AppWithRedux-stories",{

/***/ "./src/Task.tsx":
/*!**********************!*\
  !*** ./src/Task.tsx ***!
  \**********************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Task: () => (/* binding */ Task)
/* harmony export */ });
/* harmony import */ var _mui_material_Checkbox_Checkbox__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @mui/material/Checkbox/Checkbox */ "./node_modules/@mui/material/Checkbox/Checkbox.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _EditableSpan__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./EditableSpan */ "./src/EditableSpan.tsx");
/* harmony import */ var _mui_material__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @mui/material */ "./node_modules/@mui/material/esm/IconButton/IconButton.js");
/* harmony import */ var _mui_icons_material__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @mui/icons-material */ "./node_modules/@mui/icons-material/esm/Delete.js");
/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react/jsx-dev-runtime */ "./node_modules/react/jsx-dev-runtime.js");
/* provided dependency */ var __react_refresh_utils__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/lib/runtime/RefreshUtils.js");
/* provided dependency */ var __react_refresh_error_overlay__ = __webpack_require__(/*! ./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js */ "./node_modules/@pmmmwh/react-refresh-webpack-plugin/overlay/index.js");
__webpack_require__.$Refresh$.runtime = __webpack_require__(/*! ./node_modules/react-refresh/runtime.js */ "./node_modules/react-refresh/runtime.js");

var _jsxFileName = "/Users/daniltkacenko/react_kamasutra/todolist-lesson/12-todolist/src/Task.tsx",
  _s = __webpack_require__.$Refresh$.signature();






const Task = /*#__PURE__*/_s( /*#__PURE__*/react__WEBPACK_IMPORTED_MODULE_0___default().memo(_c = _s(props => {
  _s();
  const onClickHandler = () => props.removeTask(props.task.id, props.todolistId);
  const onChangeHandler = e => {
    let newIsDoneValue = e.currentTarget.checked;
    props.changeTaskStatus(props.task.id, newIsDoneValue, props.todolistId);
  };
  const onTitleChangeHandler = (0,react__WEBPACK_IMPORTED_MODULE_0__.useCallback)(newValue => {
    props.changeTaskTitle(props.task.id, newValue, props.todolistId);
  }, [props.task.id, props.changeTaskTitle, props.todolistId]);
  return /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)("div", {
    className: props.task.isDone ? 'is-done' : '',
    children: [/*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_mui_material_Checkbox_Checkbox__WEBPACK_IMPORTED_MODULE_3__["default"], {
      checked: props.task.isDone,
      color: "primary",
      onChange: onChangeHandler
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 29,
      columnNumber: 9
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_EditableSpan__WEBPACK_IMPORTED_MODULE_1__.AppWithRedux, {
      value: props.task.title,
      onChange: onTitleChangeHandler
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 34,
      columnNumber: 9
    }, undefined), /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_mui_material__WEBPACK_IMPORTED_MODULE_4__["default"], {
      onClick: onClickHandler,
      children: /*#__PURE__*/(0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_2__.jsxDEV)(_mui_icons_material__WEBPACK_IMPORTED_MODULE_5__["default"], {}, void 0, false, {
        fileName: _jsxFileName,
        lineNumber: 36,
        columnNumber: 13
      }, undefined)
    }, void 0, false, {
      fileName: _jsxFileName,
      lineNumber: 35,
      columnNumber: 9
    }, undefined)]
  }, props.task.id, true, {
    fileName: _jsxFileName,
    lineNumber: 28,
    columnNumber: 12
  }, undefined);
}, "twDFCJnizxT5S5FHYI8sqb1EQ7k=")), "twDFCJnizxT5S5FHYI8sqb1EQ7k=");
_c2 = Task;
var _c, _c2;
__webpack_require__.$Refresh$.register(_c, "Task$React.memo");
__webpack_require__.$Refresh$.register(_c2, "Task");

const $ReactRefreshModuleId$ = __webpack_require__.$Refresh$.moduleId;
const $ReactRefreshCurrentExports$ = __react_refresh_utils__.getModuleExports(
	$ReactRefreshModuleId$
);

function $ReactRefreshModuleRuntime$(exports) {
	if (true) {
		let errorOverlay;
		if (typeof __react_refresh_error_overlay__ !== 'undefined') {
			errorOverlay = __react_refresh_error_overlay__;
		}
		let testMode;
		if (typeof __react_refresh_test__ !== 'undefined') {
			testMode = __react_refresh_test__;
		}
		return __react_refresh_utils__.executeRuntime(
			exports,
			$ReactRefreshModuleId$,
			module.hot,
			errorOverlay,
			testMode
		);
	}
}

if (typeof Promise !== 'undefined' && $ReactRefreshCurrentExports$ instanceof Promise) {
	$ReactRefreshCurrentExports$.then($ReactRefreshModuleRuntime$);
} else {
	$ReactRefreshModuleRuntime$($ReactRefreshCurrentExports$);
}
try {
    // @ts-ignore
    Task.displayName = "Task";
    // @ts-ignore
    Task.__docgenInfo = { "description": "", "displayName": "Task", "props": { "changeTaskStatus": { "defaultValue": null, "description": "", "name": "changeTaskStatus", "required": true, "type": { "name": "(id: string, isDone: boolean, todolistId: string) => void" } }, "changeTaskTitle": { "defaultValue": null, "description": "", "name": "changeTaskTitle", "required": true, "type": { "name": "(taskId: string, newTitle: string, todolistId: string) => void" } }, "removeTask": { "defaultValue": null, "description": "", "name": "removeTask", "required": true, "type": { "name": "(taskId: string, todolistId: string) => void" } }, "task": { "defaultValue": null, "description": "", "name": "task", "required": true, "type": { "name": "TaskType" } }, "todolistId": { "defaultValue": null, "description": "", "name": "todolistId", "required": true, "type": { "name": "string" } } } };
    // @ts-ignore
    if (typeof STORYBOOK_REACT_CLASSES !== "undefined")
        // @ts-ignore
        STORYBOOK_REACT_CLASSES["src/Task.tsx#Task"] = { docgenInfo: Task.__docgenInfo, name: "Task", path: "src/Task.tsx#Task" };
}
catch (__react_docgen_typescript_loader_error) { }

/***/ })

});
//# sourceMappingURL=stories-AppWithRedux-stories.3eb8bc5214a9a2628219.hot-update.js.map